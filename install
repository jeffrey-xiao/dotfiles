#!/usr/bin/env bash

# Join array with delimiter.
join() {
  local IFS="$1"
  shift
  echo "$*"
}

# Get directory for install script.
DOTFILES_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)

log_file="$DOTFILES_DIR/install.log"
printf '' > "$log_file"

declare -a programs=(
  acpi blueman bspwm gnome-settings-daemon i3lock imagemagick jq network-manager numix-gtk-theme papirus-icon-theme rofi scrot slop sysstat xbacklight xclip xinput
  compton
  dunst
  feh
  mkfontdir mkfontscale xset
  htop
  mpc mpd
  mpv
  ncmpcpp
  cabextract p7zip redshift youtube-dl
  font-awesome-ttf polybar
  atool highlight imagemagick ranger w3m
  rtorrent
  rxvt-unicode xrdb tmux
  cppcheck ctags curl llvm-clang nodejs pandoc pip silver-searcher vim
  weechat
  texlive-all xdotool zathura
)
programs_string=$(join " " "${programs[@]}")
installed_program_list=$(eopkg list-installed --install-info)

# Installing necessary applications (need to install component system.devel separately).
sudo eopkg install --yes-all --component system.devel
sudo eopkg install --yes-all $programs_string

# Checking if applications are installed.
for f in "${programs[@]}"; do
  if [ "$(echo "$installed_program_list" | grep --count "$f ")" -eq 1 ]; then
    echo "$f successfully installed." >>"$log_file"
  else
    echo "$f failed to install." >>"$log_file"
  fi
done

# Set gnome settings.
gsettings set org.gnome.desktop.interface icon-theme "Papirus"
gsettings set org.gnome.desktop.interface gtk-theme "Numix"
gsettings set org.gnome.desktop.wm.preferences theme "Numix"

# Installing powerline fonts.
git clone https://github.com/powerline/fonts ~/Documents/fonts/powerline-fonts &&
  . ~/Documents/fonts/powerline-fonts/install.sh
sudo rm -f /usr/share/fonts/conf.d/70-no-bitmaps.conf &&
  sudo ln -svf /usr/share/fontconfig/conf.avail/70-yes-bitmaps.conf /usr/share/fonts/conf.d
cp -u ./fonts/*.{ttf,bdf} ~/.local/share/fonts/ &&
  (cd ~/.local/share/fonts/ && mkfontdir && mkfontscale)
fc-cache --force --verbose

# Apply ~/.Xresources.
xrdb ~/.Xresources

# Installing development related programs and tools.
vim -c PlugInstall -c q! -c q!
curl --silent --location https://raw.githubusercontent.com/creationix/nvm/master/install.sh --output install_nvm.sh &&
  chmod 775 install_nvm.sh &&
  ./install_nvm.sh &&
  rm -f install_nvm.sh
sudo pip install jedi flake8 autopep8 pylint
sudo npm install --global eslint tern &&
  (cd ~/.vim/plugged/tern_for_vim && npm install)
curl --silent --show-error --fail https://sh.rustup.rs | sh &&
  export PATH="$PATH:~/.cargo/bin" &&
  rustup install nightly &&
  rustup default nightly &&
  cargo install racer &&
  rustup component add rust-src rustfmt clippy
