#!/bin/sh

__help="Usage: ${0##*/} [OPTIONS] SUBCOMMAND

Manipulate the touchpad.

Options:
  -h, --help    display this help and exit

Subcommands:
  on            enable the touchpad.
  off           disable the touchpad.
  toggle        toggle the touchpad"


id=$(xinput | grep --extended-regexp --ignore-case --only-matching 'SynPS/2 Synaptics TouchPad\s*id=[0-9]{1,2}' | grep --perl-regexp --only-matching 'id=\K([0-9]{1,2})')
state=$(xinput list-props "$id" | grep 'Device Enabled' | awk '{print $4}')

sub_on() {
  xinput enable "$id"
  notify-send --urgency=normal 'Touchpad: Enabled'
}

sub_off() {
  xinput disable "$id"
  notify-send --urgency=normal 'Touchpad: Disabled'
}

sub_toggle() {
  if [ "$state" -eq 1 ]; then
    sub_off
  else
    sub_on
  fi
}

sub="$1"
[ "$sub" = '-h' ] || [ "$sub" = '--help' ] && { echo "$__help" && exit 0; }
[ -z "$sub" ] && { printf "Error: missing subcommand.\\n\\n%s\\n" "$__help" && exit 0; }
[ "$(command -v "sub_$sub")" ] || { printf "Error: unknown subcommand: %s.\\n\\n%s\\n" "$sub" "$__help" && exit 1; }
shift
[ -z "$*" ] || { echo "Error: unexpected positional arguments: $*." && exit 1; }
"sub_$sub"
