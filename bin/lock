#!/bin/sh

__help="Usage: ${0##*/} [OPTIONS]

Lock the screen using i3lock.

Options:
  -h, --help       display this help and exit
  -s, --suspend    suspend after locking the screen"

unset suspend

while [ ! $# -eq 0 ]; do
  case "$1" in
    -h | --help)
      echo "$__help"
      exit 0
      ;;
    -s | --suspend)
      suspend=1
      ;;
    *)
      break
      ;;
  esac
  shift
done

[ -z "$*" ] || { echo "Error: unexpected positional arguments: $*." && exit 1; }

lock_file="${XDG_CONFIG_HOME:-"$HOME/.config"}/bspwm/images/lock.png"

img_path() {
  echo "/tmp/blurred_screen_$1.png"
}

dimensions=$(xdpyinfo | awk '/dimensions/{print $2}')
ffmpeg -loglevel quiet -f x11grab -video_size "$dimensions" -i "$DISPLAY" -y -filter_complex 'boxblur=10' -vframes 1 "$(img_path 0)"

# Lockscreen image info.
[ ! -L "$lock_file" ] && lock_file=$(readlink --canonicalize "$lock_file")

# Dimensions of lock image.
r=$(file "$lock_file" | grep --only-matching '[0-9]* x [0-9]*')
rx=$(echo "$r" | cut --delimiter=' ' --fields=1)
ry=$(echo "$r" | cut --delimiter=' ' --fields=3)

sr=$(xrandr | grep '\bconnected\b' | sed 's/primary //' | cut --fields=3 --delimiter=' ')
index=0
for dimensions in $sr; do
  # Monitor dimensions.
  srx=$(echo "$dimensions" | cut --delimiter='x' --fields=1)
  sry=$(echo "$dimensions" | cut --delimiter='x' --fields=2 | cut --delimiter='+' --fields=1)

  # Monitor offsets.
  srxo=$(echo "$dimensions" | cut --delimiter='x' --fields=2 | cut --delimiter='+' --fields=2)
  sryo=$(echo "$dimensions" | cut --delimiter='x' --fields=2 | cut --delimiter='+' --fields=3)

  # Lock image location.
  px=$((srxo + srx / 2 - rx / 2))
  py=$((sryo + sry / 2 - ry / 2))

  trap 'rm -f "$(img_path $index)"' EXIT
  ffmpeg -i "$(img_path $index)" -i "$lock_file" -y -filter_complex "overlay=$px:$py" -vframes 1 "$(img_path "$((index + 1))")"
  /bin/rm -f "$(img_path $index)"
  trap - EXIT
  index=$((index + 1))
done

trap 'rm -f "$(img_path $index)"' EXIT
i3lock -e -u -i "$(img_path $index)"
if [ ! -z $suspend ]; then
  systemctl suspend
fi
/bin/rm -f "$(img_path $index)"
trap - EXIT
