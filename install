#!/usr/bin/env bash

# Join array with delimiter.
join() {
  local IFS="$1"
  shift
  echo "$*"
}

# Get directory for install script.
DOTFILES_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)

log_file="$DOTFILES_DIR/install.log"
printf '' > "$log_file"

declare -a programs=(
  acpi blueman bspwm i3lock imagemagick jq network-manager numix-gtk-theme papirus-icon-theme rofi scrot slop sysstat xbacklight xclip xinput xsetroot
  dunst
  feh
  mkfontscale xset
  htop
  mpc-client mpd
  mpv
  ncmpcpp
  picom
  redshift yt-dlc
  font-awesome-ttf polybar
  atool cabextract highlight imagemagick p7zip ranger w3m
  rtorrent
  rxvt-unicode xrdb tmux
  cppcheck ctags curl llvm-clang pandoc pip ripgrep vim
  weechat
  texlive-all xdotool zathura zathura-mupdf
)
programs_string=$(join " " "${programs[@]}")
installed_program_list=$(eopkg list-installed --install-info)

# Installing necessary applications (need to install component system.devel separately).
sudo eopkg install --yes-all --component system.devel
sudo eopkg install --yes-all $programs_string

# Checking if applications are installed.
for f in "${programs[@]}"; do
  if [ "$(echo "$installed_program_list" | grep --count "$f ")" -eq 1 ]; then
    echo "$f successfully installed." >>"$log_file"
  else
    echo "$f failed to install." >>"$log_file"
  fi
done

# Installing powerline fonts.
sudo rm -f /usr/share/fonts/conf.d/70-no-bitmaps.conf &&
  sudo ln -svf /usr/share/fontconfig/conf.avail/70-yes-bitmaps.conf /usr/share/fonts/conf.d
mkdir -pv ~/.local/share/fonts/ &&
  cp -u ./fonts/*.{ttf,bdf} ~/.local/share/fonts/ &&
  (cd ~/.local/share/fonts/ && mkfontdir && mkfontscale)
fc-cache --force --verbose

# Apply ~/.Xresources.
xrdb ~/.Xresources

# Installing development related programs and tools.
vim -c helptags ALL -c q!
~/.vim/pack/plugins/start/fzf/install --all --xdg --no-update-rc
python3 -m pip install --user autopep8 flake8 pylint python-language-server yapf
NPM_PREFIX=~/.local/share/n curl --silent --show-error --fail --location https://git.io/n-install | bash
npm install --global @bitwarden/cli eslint javascript-typescript-langserver prettier
curl --silent --show-error --fail https://sh.rustup.rs | sh -s -- -y --no-modify-path --default-toolchain nightly --component clippy rustfmt rust-analyzer-preview rust-src &&
  rustup install stable
