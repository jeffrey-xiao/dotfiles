#!/usr/bin/env bash

bookmarks_file=${XDG_DATA_DIR:-"$HOME/.local/share"}/bash/bookmarks

[ ! -f "$bookmarks_file" ] && touch "$bookmarks_file"

__check_bookmark_name() {
  [ -z "$1" ] && { echo 'Error: Argument 1 must be bookmark name.' && return 1; }
  { ! echo "$1" | grep --silent "^[-_0-9a-zA-Z]*$"; } && { echo 'Error: Argument 1 must be a valid bookmark name.' && return 1; }
  return 0
}

__delete_line() {
  tmp=$(mktemp -t bookmarks.XXXXXXXXXX) || exit 1
  trap 'rm -f "$tmp"' EXIT
  sed "/$2/d" "$1" >"$tmp"
  /bin/mv -f "$tmp" "$1"
  /bin/rm -f "$tmp"
  trap - EXIT
}

__add_line() {
  tmp=$(mktemp -t bookmarks.XXXXXXXXXX) || exit 1
  trap 'rm -f "$tmp"' EXIT
  cat "$1" <(echo "$2") | sort >"$tmp"
  /bin/mv -f "$tmp" "$1"
  /bin/rm -f "$tmp"
  trap - EXIT
}

__bookmarks() {
  cut --delimiter='=' --fields=1 <"$bookmarks_file"
}

__comp() {
  curr=${COMP_WORDS[COMP_CWORD]}
  mapfile -t COMPREPLY < <(compgen -W "$(__bookmarks)" -- "$curr")
}

bs() {
  ! __check_bookmark_name "$1" && return
  __delete_line "$bookmarks_file" "$1="
  __add_line "$bookmarks_file" "$1=$(pwd)"
  echo "Saved bookmark '$1' to '$(pwd)'"
}

bg() {
  ! __check_bookmark_name "$1" && return
  dir="$(grep "^$1=" <"$bookmarks_file" | cut --delimiter='=' --fields=2-)"
  [ -z "$dir" ] && { echo "Error: Bookmark '$1' does not exist." && return; }
  [ ! -d "$dir" ] && { echo "Error: Directory '$dir' does not exist." && return; }
  cd "$dir" || return
}

bd() {
  ! __check_bookmark_name "$1" && return
  dir="$(grep "^$1=" <"$bookmarks_file" | cut --delimiter='=' --fields=2-)"
  [ -z "$dir" ] && { echo "Error: Bookmark '$1' does not exist." && return; }
  __delete_line "$bookmarks_file" "$1="
  echo "Deleted bookmark '$1' to '$dir'"
}

bl() {
  awk --field-separator='=' '{
    i = index($0, "=");
    printf("%-20s %s\n", $1, substr($0, i + 1));
  }' "$bookmarks_file"
}

shopt -s progcomp
complete -F __comp bg
complete -F __comp bd
