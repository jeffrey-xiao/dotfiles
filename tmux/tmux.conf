# Smart pane switching with awareness of vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# No delay for escape key press.
set-option -sg escape-time 0

# 0 is too far from `.
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Automatically renumber windows and configure window title.
set-option -g renumber-windows on
set-option -g set-titles on
set-window-option -g automatic-rename on

set-option -g mouse on

set-option -g default-terminal xterm-256color
set-option -g history-limit 10000
set-window-option -g monitor-activity on

# Enable vi-style keys.
set-option -g status-keys vi
set-window-option -g mode-keys vi

# Copy and paste bindings.
unbind -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# Bindings to split windows.
bind-key C-s split-window -v
bind-key C-v split-window -h

# Bindings for resizing panes.
bind-key -n C-M-j resize-pane -D 2
bind-key -n C-M-k resize-pane -U 2
bind-key -n C-M-h resize-pane -L 2
bind-key -n C-M-l resize-pane -R 2

# Switching windows.
bind-key -n M-Left previous-window
bind-key -n M-Right next-window
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# Swapping windows.
bind-key -n M-S-Left swap-window -t -1
bind-key -n M-S-Right swap-window -t +1

bind-key C-d detach
bind-key C-r source-file ~/.config/tmux/tmux.conf \; display "Configuration reloaded."

# Appearance.
set-option -g status on
set-option -g status-justify left
set-option -g status-style fg=colour14,bg=colour0,none

set-option -g status-left "#[fg=colour0, bg=colour14] #S "
set-option -g status-left-length 100
set-option -g status-left-style bold

set-option -g status-right "#[fg=colour0, bg=colour14] #(whoami)@#(hostname) "
set-option -g status-right-length 100
set-option -g status-right-style bold

set-window-option -g window-status-format "#[fg=colour14, bg=colour0] #I: #W#F "
set-window-option -g window-status-current-format "#[fg=colour3, bg=colour0] #I: #W#F "
set-window-option -g window-status-separator "|"
set-window-option -g window-status-style none
set-window-option -g window-status-activity-style fg=colour1,bg=colour14
set-window-option -g window-status-bell-style fg=colour1,bg=colour14

set-option -g pane-border-style fg=colour14,bg=colour0
set-option -g pane-active-border-style fg=colour3,bg=colour0

set-option -g message-style fg=colour1,bg=colour0
set-option -g message-command-style fg=colour14,bg=colour0

set-window-option -g window-style bg=colour0
set-window-option -g window-active-style bg=colour8
