#!/bin/sh

__help="Usage: ${0##*/} [OPTIONS] [SUBCOMMAND]

Increase, decrease, or set the screen brightness. If no subcommand is supplied,
then status is run by default.

Options:
  -h, --help     display this help and exit

Subcommands:
  inc PERCENT    increase the brightness by a percent
  dec PERCENT    decrease the brightness by a percent
  set PERCENT    set the brightness to a percent
  status         print the current brightness"

check_no_positionals() { [ -z "$*" ] || { echo "Error: unexpected positional arguments: $*." && exit 1; } }

brightness_file='/sys/class/backlight/intel_backlight/brightness'
max_brightness_file='/sys/class/backlight/intel_backlight/max_brightness'
curr_brightness=$(cat $brightness_file)
min_brightness=1
max_brightness=$(cat $max_brightness_file)

sub_status() {
  check_no_positionals "$@"
  echo "$((curr_brightness * 100 / max_brightness))%"
  exit 0
}

sub_set() {
  [ -z "$1" ] && { echo "Error: subcommand set requires PERCENT." && exit 1; }
  percent="$1"
  shift
  check_no_positionals "$@"

  curr_brightness=$((percent * max_brightness / 100))
  if [ "$curr_brightness" -gt "$max_brightness" ]; then
    curr_brightness=$max_brightness
  elif [ "$curr_brightness" -lt "$min_brightness" ]; then
    curr_brightness=$min_brightness
  fi
  echo "echo $curr_brightness > $brightness_file" | sudo bash
}

sub_inc() {
  [ -z "$1" ] && { echo "Error: subcommand inc requires PERCENT." && exit 1; }
  delta="$1"
  shift
  check_no_positionals "$@"

  sub_set $((delta + curr_brightness * 100 / max_brightness + delta))
}


sub_dec() {
  [ -z "$1" ] && { echo "Error: subcommand dec requires PERCENT." && exit 1; }
  delta="$1"
  shift
  check_no_positionals "$@"

  sub_set $((curr_brightness * 100 / max_brightness - delta))
}

sub="$1"
[ "$sub" = '-h' ] || [ "$sub" = '--help' ] && { echo "$__help" && exit 0; }
[ -z "$sub" ] && { sub_status "$@" && exit 0; }
[ "$(command -v "sub_$sub")" ] || { printf "Error: unknown subcommand: %s.\\n\\n%s\\n" "$sub" "$__help" && exit 1; }
shift
"sub_$sub" "$@"
